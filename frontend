<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>E$M Shopping Bay - Kenya's Premium Marketplace</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary: #2C3E50;  /* Deep blue */
            --secondary: #E74C3C; /* Red */
            --accent: #F39C12;   /* Orange */
            --dark: #1A1A1A;     /* Dark */
            --light: #F5F5F5;    /* Light gray */
            --success: #27AE60;  /* Green */
            --warning: #F1C40F;  /* Yellow */
            --danger: #E74C3C;   /* Red */
            --text: #333333;     /* Dark text */
            --text-light: #777777; /* Light text */
            --border-radius: 8px;
            --box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: var(--light);
            color: var(--text);
            line-height: 1.6;
        }

        /* Header Styles */
        .header {
            background-color: white;
            box-shadow: var(--box-shadow);
            position: sticky;
            top: 0;
            z-index: 1000;
            padding: 15px 0;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background-color: var(--primary);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }

        .logo-text {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--dark);
        }

        .logo-text span {
            color: var(--primary);
        }

        .nav-links {
            display: flex;
            list-style: none;
        }

        .nav-links li {
            margin-left: 25px;
        }

        .nav-links a {
            text-decoration: none;
            color: var(--dark);
            font-weight: 500;
            transition: var(--transition);
            position: relative;
        }

        .nav-links a:hover {
            color: var(--primary);
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary);
            transition: var(--transition);
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        .user-actions {
            display: flex;
            align-items: center;
        }

        .user-actions a {
            margin-left: 15px;
            color: var(--dark);
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
        }

        .user-actions a:hover {
            color: var(--primary);
        }

        .cart-icon {
            position: relative;
        }

        .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background-color: var(--accent);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            font-weight: bold;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(rgba(44, 62, 80, 0.8), rgba(44, 62, 80, 0.8)), url('https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') no-repeat center center/cover;
            height: 500px;
            display: flex;
            align-items: center;
            color: white;
            text-align: center;
            margin-bottom: 3rem;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
        }

        .btn {
            display: inline-block;
            background-color: var(--accent);
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            text-decoration: none;
            font-size: 1rem;
            font-weight: 500;
            transition: var(--transition);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .btn:hover {
            background-color: #e07d01;
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
        }

        .btn-outline {
            background-color: transparent;
            border: 2px solid white;
            color: white;
            margin-left: 15px;
        }

        .btn-outline:hover {
            background-color: white;
            color: var(--primary);
        }

        /* Products Section */
        .section-title {
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
        }

        .section-title h2 {
            font-size: 2.2rem;
            color: var(--dark);
            display: inline-block;
            padding-bottom: 10px;
        }

        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: var(--primary);
        }

        .product-filters {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 8px 20px;
            margin: 0 10px 10px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 30px;
            cursor: pointer;
            transition: var(--transition);
        }

        .filter-btn:hover, .filter-btn.active {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 30px;
            margin-bottom: 4rem;
        }

        .product-card {
            background-color: white;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }

        .product-badge {
            position: absolute;
            top: 15px;
            left: 15px;
            background-color: var(--accent);
            color: white;
            padding: 5px 15px;
            border-radius: 30px;
            font-size: 0.8rem;
            font-weight: 500;
            z-index: 1;
        }

        .product-image {
            height: 220px;
            overflow: hidden;
            position: relative;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: var(--transition);
        }

        .product-card:hover .product-image img {
            transform: scale(1.1);
        }

        .product-actions {
            position: absolute;
            bottom: 15px;
            right: 15px;
            display: flex;
            flex-direction: column;
            opacity: 0;
            transition: var(--transition);
        }

        .product-card:hover .product-actions {
            opacity: 1;
        }

        .action-btn {
            width: 40px;
            height: 40px;
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            box-shadow: var(--box-shadow);
            color: var(--dark);
            transition: var(--transition);
        }

        .action-btn:hover {
            background-color: var(--primary);
            color: white;
            transform: scale(1.1);
        }

        .product-info {
            padding: 20px;
        }

        .product-category {
            color: var(--primary);
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .product-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark);
        }

        .product-price {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .current-price {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--accent);
        }

        .old-price {
            font-size: 0.9rem;
            text-decoration: line-through;
            color: var(--text-light);
            margin-left: 10px;
        }

        .add-to-cart {
            width: 100%;
            padding: 10px;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .add-to-cart i {
            margin-right: 8px;
        }

        .add-to-cart:hover {
            background-color: #1a252f;
        }

        /* Cart Sidebar */
        .cart-sidebar {
            position: fixed;
            top: 0;
            right: -400px;
            width: 400px;
            height: 100vh;
            background-color: white;
            box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
            z-index: 1050;
            transition: var(--transition);
            display: flex;
            flex-direction: column;
        }

        .cart-sidebar.active {
            right: 0;
        }

        .cart-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .cart-header h3 {
            font-size: 1.3rem;
            color: var(--dark);
        }

        .close-cart {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-light);
            transition: var(--transition);
        }

        .close-cart:hover {
            color: var(--danger);
            transform: rotate(90deg);
        }

        .cart-items {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
        }

        .cart-item {
            display: flex;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .cart-item-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: var(--border-radius);
            margin-right: 15px;
        }

        .cart-item-info {
            flex: 1;
        }

        .cart-item-title {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--dark);
        }

        .cart-item-price {
            font-weight: 700;
            color: var(--accent);
            margin-bottom: 5px;
        }

        .cart-item-quantity {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        .quantity-btn {
            width: 25px;
            height: 25px;
            background-color: #eee;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            transition: var(--transition);
        }

        .quantity-btn:hover {
            background-color: var(--primary);
            color: white;
        }

        .quantity-input {
            width: 40px;
            text-align: center;
            margin: 0 10px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            padding: 3px;
        }

        .remove-item {
            color: var(--danger);
            background: none;
            border: none;
            cursor: pointer;
            margin-left: auto;
            align-self: flex-start;
            transition: var(--transition);
        }

        .remove-item:hover {
            transform: scale(1.2);
        }

        .cart-footer {
            padding: 20px;
            border-top: 1px solid #eee;
        }

        .cart-totals {
            margin-bottom: 20px;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .total-row:last-child {
            font-weight: 700;
            font-size: 1.1rem;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .checkout-btn {
            width: 100%;
            padding: 12px;
            background-color: var(--success);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            font-size: 1rem;
            transition: var(--transition);
        }

        .checkout-btn:hover {
            background-color: #219955;
        }

        .cart-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1040;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .cart-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Checkout Modal */
        .checkout-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.9);
            width: 90%;
            max-width: 800px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            z-index: 1060;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
            padding: 30px;
        }

        .checkout-modal.active {
            opacity: 1;
            visibility: visible;
            transform: translate(-50%, -50%) scale(1);
        }

        .checkout-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .checkout-header h2 {
            color: var(--dark);
        }

        .close-checkout {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-light);
            transition: var(--transition);
        }

        .close-checkout:hover {
            color: var(--danger);
        }

        .checkout-steps {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
            position: relative;
        }

        .checkout-steps::before {
            content: '';
            position: absolute;
            top: 15px;
            left: 0;
            right: 0;
            height: 2px;
            background-color: #eee;
            z-index: 1;
        }

        .step {
            position: relative;
            z-index: 2;
            text-align: center;
            flex: 1;
            padding-bottom: 15px;
            color: var(--text-light);
            font-weight: 500;
        }

        .step::before {
            content: '';
            display: inline-block;
            width: 30px;
            height: 30px;
            background-color: #eee;
            border-radius: 50%;
            line-height: 30px;
            text-align: center;
            margin-bottom: 5px;
            color: white;
            transition: var(--transition);
        }

        .step.active {
            color: var(--primary);
        }

        .step.active::before {
            background-color: var(--primary);
            content: counter(step);
            counter-increment: step;
        }

        .step.completed::before {
            background-color: var(--success);
            content: '✓';
        }

        .checkout-content {
            display: none;
        }

        .checkout-content.active {
            display: block;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark);
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(44, 62, 80, 0.2);
        }

        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-row .form-group {
            flex: 1;
        }

        .payment-methods {
            margin-top: 30px;
        }

        .payment-method {
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            padding: 15px;
            transition: var(--transition);
            cursor: pointer;
        }

        .payment-method:hover {
            border-color: var(--primary);
        }

        .payment-method input[type="radio"] {
            margin-right: 10px;
        }

        .payment-method label {
            display: flex;
            align-items: center;
            cursor: pointer;
            font-weight: 500;
            color: var(--dark);
        }

        .payment-method i {
            margin-right: 10px;
            font-size: 1.5rem;
            color: var(--primary);
        }

        .payment-details {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #eee;
            display: none;
        }

        .mpesa-instructions {
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: var(--border-radius);
            margin-bottom: 15px;
        }

        .mpesa-instructions p {
            margin-bottom: 10px;
        }

        .order-summary {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: var(--border-radius);
            margin-bottom: 20px;
        }

        .order-items {
            max-height: 200px;
            overflow-y: auto;
            margin-bottom: 15px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .order-item-info {
            display: flex;
            align-items: center;
        }

        .order-item-img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: var(--border-radius);
            margin-right: 10px;
        }

        .order-item-title {
            font-weight: 500;
        }

        .order-item-price {
            font-weight: 700;
            color: var(--accent);
        }

        .order-totals {
            border-top: 1px solid #ddd;
            padding-top: 15px;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .grand-total {
            font-weight: 700;
            font-size: 1.1rem;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #ddd;
        }

        .step-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
        }

        .step-btn {
            padding: 12px 25px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
        }

        .prev-step {
            background-color: #eee;
            border: none;
            color: var(--text);
        }

        .prev-step:hover {
            background-color: #ddd;
        }

        .next-step {
            background-color: var(--primary);
            border: none;
            color: white;
        }

        .next-step:hover {
            background-color: #1a252f;
        }

        .place-order {
            background-color: var(--success);
            border: none;
            color: white;
            width: 100%;
            padding: 12px;
        }

        .place-order:hover {
            background-color: #219955;
        }

        .order-complete {
            text-align: center;
            padding: 30px;
        }

        .order-complete i {
            font-size: 5rem;
            color: var(--success);
            margin-bottom: 20px;
        }

        .order-complete h3 {
            margin-bottom: 15px;
            color: var(--dark);
        }

        .order-complete p {
            margin-bottom: 10px;
            color: var(--text);
        }

        /* Auth Modals */
        .auth-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.9);
            width: 90%;
            max-width: 500px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            z-index: 1060;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .auth-modal.active {
            opacity: 1;
            visibility: visible;
            transform: translate(-50%, -50%) scale(1);
        }

        .auth-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .auth-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .auth-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .auth-header h2 {
            color: var(--dark);
        }

        .auth-tabs {
            display: flex;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
        }

        .auth-tab {
            padding: 10px 20px;
            cursor: pointer;
            font-weight: 500;
            color: var(--text-light);
            border-bottom: 2px solid transparent;
            transition: var(--transition);
        }

        .auth-tab.active {
            color: var(--primary);
            border-bottom-color: var(--primary);
        }

        .auth-form {
            display: none;
        }

        .auth-form.active {
            display: block;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: var(--text-light);
        }

        .auth-footer {
            margin-top: 20px;
            text-align: center;
        }

        .auth-footer p {
            margin-bottom: 10px;
            color: var(--text-light);
        }

        .social-login {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .social-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
        }

        .social-btn i {
            margin-right: 8px;
        }

        .facebook {
            background-color: #3b5998;
        }

        .facebook:hover {
            background-color: #344e86;
        }

        .google {
            background-color: #db4437;
        }

        .google:hover {
            background-color: #c23321;
        }

        /* Admin Dashboard */
        .admin-dashboard {
            display: none;
            padding: 2rem 0;
            background-color: #f5f7fa;
            min-height: 100vh;
        }

        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #ddd;
        }

        .admin-header h1 {
            color: var(--dark);
            font-size: 1.8rem;
        }

        .admin-header h1 span {
            color: var(--primary);
        }

        .logout-btn {
            background-color: var(--danger);
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
        }

        .logout-btn:hover {
            background-color: #d32f2f;
        }

        .admin-sections {
            display: flex;
            gap: 15px;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .admin-tab {
            padding: 10px 20px;
            background-color: white;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            box-shadow: var(--box-shadow);
            transition: var(--transition);
        }

        .admin-tab.active {
            background-color: var(--primary);
            color: white;
        }

        .admin-content {
            display: none;
            background-color: white;
            padding: 2rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .admin-content.active {
            display: block;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 1rem;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background-color: #f9f9f9;
            font-weight: 600;
            color: var(--dark);
        }

        tr:hover {
            background-color: #f5f5f5;
        }

        .action-btn {
            padding: 6px 12px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
            border: none;
            margin-right: 5px;
        }

        .edit-btn {
            background-color: var(--warning);
            color: var(--dark);
        }

        .edit-btn:hover {
            background-color: #e0a800;
        }

        .save-btn {
            background-color: var(--success);
            color: white;
        }

        .save-btn:hover {
            background-color: #219955;
        }

        .delete-btn {
            background-color: var(--danger);
            color: white;
        }

        .delete-btn:hover {
            background-color: #d32f2f;
        }

        .add-product-form {
            margin-top: 2rem;
        }

        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-row .form-group {
            flex: 1;
        }

        .form-group textarea {
            min-height: 100px;
            resize: vertical;
        }

        /* About Us Page */
        .about-section {
            background-color: white;
            padding: 3rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            margin-bottom: 3rem;
        }

        .about-section h2 {
            color: var(--dark);
            margin-bottom: 1.5rem;
            font-size: 2rem;
            position: relative;
            padding-bottom: 10px;
        }

        .about-section h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 80px;
            height: 3px;
            background-color: var(--primary);
        }

        .about-section p {
            margin-bottom: 1.5rem;
            line-height: 1.8;
        }

        .contact-info {
            margin-top: 2rem;
        }

        .contact-info h3 {
            color: var(--dark);
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .contact-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .contact-item i {
            width: 40px;
            height: 40px;
            background-color: var(--primary);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            font-size: 1.2rem;
        }

        .contact-item p {
            margin: 0;
            font-size: 1rem;
        }

        /* Footer */
        .footer {
            background-color: var(--dark);
            color: white;
            padding: 4rem 0 2rem;
        }

        .footer-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 30px;
            margin-bottom: 2rem;
        }

        .footer-col h3 {
            font-size: 1.3rem;
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 10px;
        }

        .footer-col h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 2px;
            background-color: var(--primary);
        }

        .footer-col p {
            margin-bottom: 1.5rem;
            color: #bbb;
            line-height: 1.8;
        }

        .footer-links {
            list-style: none;
        }

        .footer-links li {
            margin-bottom: 12px;
        }

        .footer-links a {
            color: #bbb;
            text-decoration: none;
            transition: var(--transition);
            display: inline-block;
        }

        .footer-links a:hover {
            color: white;
            transform: translateX(5px);
        }

        .payment-methods {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
        }

        .payment-method-icon {
            width: 50px;
            height: 30px;
            background-color: white;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 5px;
        }

        .payment-method-icon img {
            max-width: 100%;
            max-height: 100%;
        }

        .social-links {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .social-link {
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            transition: var(--transition);
        }

        .social-link:hover {
            background-color: var(--primary);
            transform: translateY(-3px);
        }

        .footer-bottom {
            text-align: center;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            color: #bbb;
            font-size: 0.9rem;
        }

        /* Responsive Styles */
        @media (max-width: 992px) {
            .nav-links {
                display: none;
            }
            
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .cart-sidebar {
                width: 350px;
            }
        }

        @media (max-width: 768px) {
            .hero {
                height: 400px;
            }
            
            .hero h1 {
                font-size: 2rem;
            }
            
            .hero p {
                font-size: 1rem;
            }
            
            .product-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }
            
            .form-row {
                flex-direction: column;
                gap: 0;
            }
            
            .checkout-steps {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .step {
                text-align: left;
                padding-left: 40px;
                margin-bottom: 20px;
            }
            
            .step::before {
                position: absolute;
                left: 0;
            }
            
            .checkout-steps::before {
                display: none;
            }
        }

        @media (max-width: 576px) {
            .header-content {
                flex-direction: column;
            }
            
            .logo {
                margin-bottom: 15px;
            }
            
            .user-actions {
                margin-top: 15px;
            }
            
            .hero {
                height: 350px;
            }
            
            .hero h1 {
                font-size: 1.8rem;
            }
            
            .btn {
                display: block;
                width: 100%;
                margin-bottom: 10px;
            }
            
            .btn-outline {
                margin-left: 0;
            }
            
            .cart-sidebar {
                width: 100%;
                max-width: 350px;
            }
        }

        /* Admin specific styles */
        .admin-price-input {
            width: 100px;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .admin-stock-select {
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .order-status-select {
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .pickup-location-select {
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            min-width: 150px;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-badge.processing {
            background-color: #f39c12;
            color: white;
        }

        .status-badge.shipped {
            background-color: #3498db;
            color: white;
        }

        .status-badge.delivered {
            background-color: #27ae60;
            color: white;
        }

        .status-badge.cancelled {
            background-color: #e74c3c;
            color: white;
        }

        .analytics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .analytics-card {
            background-color: white;
            padding: 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            text-align: center;
        }

        .analytics-card h3 {
            font-size: 1rem;
            color: var(--text-light);
            margin-bottom: 10px;
        }

        .analytics-card p {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
        }

        .chart-container {
            background-color: white;
            padding: 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="#" class="logo">
                    <div class="logo-icon">E$M</div>
                    <div class="logo-text">E$M <span>Shopping</span></div>
                </a>
                
                <ul class="nav-links">
                    <li><a href="#" class="active">Home</a></li>
                    <li><a href="#products">Products</a></li>
                    <li><a href="#about">About Us</a></li>
                    <li><a href="#contact">Contact</a></li>
                    <li><a href="#" id="admin-link" style="display: none;">Admin</a></li>
                </ul>
                
                <div class="user-actions">
                    <a href="#" id="login-link">Login</a>
                    <a href="#" id="register-link">Register</a>
                    <a href="#" class="cart-icon" id="cart-icon">
                        <i class="fas fa-shopping-cart"></i>
                        <span class="cart-count">0</span>
                    </a>
                </div>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="container">
            <div class="hero-content">
                <h1>Welcome to E$M Shopping Bay</h1>
                <p>Kenya's premium marketplace for quality products at affordable prices. Shop with confidence and enjoy fast delivery nationwide.</p>
                <a href="#products" class="btn">Shop Now</a>
                <a href="#about" class="btn btn-outline">Learn More</a>
            </div>
        </div>
    </section>

    <!-- Products Section -->
    <section class="container" id="products">
        <div class="section-title">
            <h2>Our Products</h2>
        </div>
        
        <div class="product-filters">
            <button class="filter-btn active" data-filter="all">All</button>
            <button class="filter-btn" data-filter="electronics">Electronics</button>
            <button class="filter-btn" data-filter="fashion">Fashion</button>
            <button class="filter-btn" data-filter="home">Home & Kitchen</button>
            <button class="filter-btn" data-filter="beauty">Beauty</button>
            <button class="filter-btn" data-filter="groceries">Groceries</button>
        </div>
        
        <div class="product-grid" id="product-grid">
            <!-- Products will be loaded here dynamically -->
        </div>
    </section>

    <!-- About Us Section -->
    <section class="container" id="about">
        <div class="about-section">
            <h2>About E$M Shopping Bay</h2>
            <p>E$M Shopping Bay is Kenya's fastest growing online marketplace, connecting buyers and sellers across the country. Founded in 2023, we've grown to become a trusted platform for thousands of Kenyans to shop conveniently from the comfort of their homes.</p>
            <p>Our mission is to make online shopping accessible, affordable and enjoyable for everyone. We carefully vet all our sellers to ensure you only get quality products at the best prices.</p>
            
            <div class="contact-info">
                <h3>Why Shop With Us?</h3>
                <div class="contact-item">
                    <i class="fas fa-truck"></i>
                    <p>Fast & reliable delivery across Kenya</p>
                </div>
                <div class="contact-item">
                    <i class="fas fa-shield-alt"></i>
                    <p>Secure payment options including M-Pesa</p>
                </div>
                <div class="contact-item">
                    <i class="fas fa-undo"></i>
                    <p>Easy returns within 7 days</p>
                </div>
                <div class="contact-item">
                    <i class="fas fa-headset"></i>
                    <p>24/7 customer support</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer" id="contact">
        <div class="container">
            <div class="footer-grid">
                <div class="footer-col">
                    <h3>E$M Shopping Bay</h3>
                    <p>Kenya's premium online marketplace offering quality products at affordable prices with fast nationwide delivery.</p>
                    <div class="social-links">
                        <a href="#" class="social-link"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="social-link"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                
                <div class="footer-col">
                    <h3>Quick Links</h3>
                    <ul class="footer-links">
                        <li><a href="#">Home</a></li>
                        <li><a href="#products">Products</a></li>
                        <li><a href="#about">About Us</a></li>
                        <li><a href="#">Terms & Conditions</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                    </ul>
                </div>
                
                <div class="footer-col">
                    <h3>Customer Service</h3>
                    <ul class="footer-links">
                        <li><a href="#">My Account</a></li>
                        <li><a href="#">Order Tracking</a></li>
                        <li><a href="#">Wishlist</a></li>
                        <li><a href="#">Returns & Refunds</a></li>
                        <li><a href="#">FAQs</a></li>
                    </ul>
                </div>
                
                <div class="footer-col">
                    <h3>Contact Us</h3>
                    <p><i class="fas fa-map-marker-alt"></i> Westlands, Nairobi, Kenya</p>
                    <p><i class="fas fa-phone"></i> +254 700 000000</p>
                    <p><i class="fas fa-envelope"></i> info@esmshopping.co.ke</p>
                    
                    <h4>Payment Methods</h4>
                    <div class="payment-methods">
                        <div class="payment-method-icon">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/1/15/M-PESA_LOGO-01.svg" alt="M-Pesa">
                        </div>
                        <div class="payment-method-icon">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/5/5e/Visa_Inc._logo.svg" alt="Visa">
                        </div>
                        <div class="payment-method-icon">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/2/2a/Mastercard-logo.svg" alt="Mastercard">
                        </div>
                        <div class="payment-method-icon">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/b/ba/PayPal.svg" alt="PayPal">
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="footer-bottom">
                <p>&copy; 2023 E$M Shopping Bay. All Rights Reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Cart Sidebar -->
    <div class="cart-sidebar" id="cart-sidebar">
        <div class="cart-header">
            <h3>Your Cart</h3>
            <button class="close-cart" id="close-cart"><i class="fas fa-times"></i></button>
        </div>
        
        <div class="cart-items" id="cart-items">
            <!-- Cart items will be loaded here dynamically -->
            <p class="empty-cart-message">Your cart is empty</p>
        </div>
        
        <div class="cart-footer">
            <div class="cart-totals">
                <div class="total-row">
                    <span>Subtotal:</span>
                    <span id="cart-subtotal">KSh 0.00</span>
                </div>
                <div class="total-row">
                    <span>Delivery:</span>
                    <span id="cart-delivery">KSh 0.00</span>
                </div>
                <div class="total-row">
                    <span>Total:</span>
                    <span id="cart-total">KSh 0.00</span>
                </div>
            </div>
            
            <button class="checkout-btn" id="checkout-btn">Proceed to Checkout</button>
        </div>
    </div>
    
    <div class="cart-overlay" id="cart-overlay"></div>

    <!-- Checkout Modal -->
    <div class="checkout-modal" id="checkout-modal">
        <div class="checkout-header">
            <h2>Checkout</h2>
            <button class="close-checkout" id="close-checkout"><i class="fas fa-times"></i></button>
        </div>
        
        <div class="checkout-steps">
            <div class="step active" data-step="1">Shipping</div>
            <div class="step" data-step="2">Payment</div>
            <div class="step" data-step="3">Confirmation</div>
        </div>
        
        <!-- Step 1: Shipping Information -->
        <div class="checkout-content active" id="step-1">
            <form id="shipping-form">
                <div class="form-row">
                    <div class="form-group">
                        <label for="first-name">First Name</label>
                        <input type="text" id="first-name" required>
                    </div>
                    <div class="form-group">
                        <label for="last-name">Last Name</label>
                        <input type="text" id="last-name" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" required>
                </div>
                
                <div class="form-group">
                    <label for="phone">Phone Number</label>
                    <input type="tel" id="phone" required>
                </div>
                
                <div class="form-group">
                    <label for="address">Street Address</label>
                    <input type="text" id="address" required>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" id="city" required>
                    </div>
                    <div class="form-group">
                        <label for="county">County</label>
                        <select id="county" required>
                            <option value="">Select County</option>
                            <option value="Nairobi">Nairobi</option>
                            <option value="Mombasa">Mombasa</option>
                            <option value="Kisumu">Kisumu</option>
                            <option value="Nakuru">Nakuru</option>
                            <option value="Eldoret">Eldoret</option>
                            <option value="Thika">Thika</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="notes">Delivery Notes (Optional)</label>
                    <textarea id="notes" rows="3"></textarea>
                </div>
                
                <div class="step-actions">
                    <button type="button" class="step-btn prev-step" disabled>Back</button>
                    <button type="button" class="step-btn next-step" id="next-to-payment">Continue to Payment</button>
                </div>
            </form>
        </div>
        
        <!-- Step 2: Payment Information -->
        <div class="checkout-content" id="step-2">
            <div class="order-summary">
                <h3>Order Summary</h3>
                <div class="order-items" id="checkout-items">
                    <!-- Order items will be loaded here dynamically -->
                </div>
                <div class="order-totals">
                    <div class="total-row">
                        <span>Subtotal:</span>
                        <span id="checkout-subtotal">KSh 0.00</span>
                    </div>
                    <div class="total-row">
                        <span>Delivery:</span>
                        <span id="checkout-delivery">KSh 0.00</span>
                    </div>
                    <div class="grand-total">
                        <span>Total:</span>
                        <span id="checkout-total">KSh 0.00</span>
                    </div>
                </div>
            </div>
            
            <div class="payment-methods">
                <h3>Select Payment Method</h3>
                
                <div class="payment-method">
                    <input type="radio" id="mpesa" name="payment-method" value="mpesa" checked>
                    <label for="mpesa">
                        <i class="fas fa-mobile-alt"></i>
                        M-Pesa
                    </label>
                    <div class="payment-details" id="mpesa-details">
                        <div class="mpesa-instructions">
                            <p>1. You will receive a payment request on your phone</p>
                            <p>2. Enter your M-Pesa PIN when prompted</p>
                            <p>3. Wait for confirmation message before closing this window</p>
                        </div>
                        <div class="form-group">
                            <label for="mpesa-phone">M-Pesa Phone Number</label>
                            <input type="tel" id="mpesa-phone" placeholder="e.g. 254700000000" required>
                        </div>
                    </div>
                </div>
                
                <div class="payment-method">
                    <input type="radio" id="card" name="payment-method" value="card">
                    <label for="card">
                        <i class="far fa-credit-card"></i>
                        Credit/Debit Card
                    </label>
                    <div class="payment-details" id="card-details">
                        <div class="form-group">
                            <label for="card-number">Card Number</label>
                            <input type="text" id="card-number" placeholder="1234 5678 9012 3456">
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label for="card-expiry">Expiry Date</label>
                                <input type="text" id="card-expiry" placeholder="MM/YY">
                            </div>
                            <div class="form-group">
                                <label for="card-cvv">CVV</label>
                                <input type="text" id="card-cvv" placeholder="123">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="card-name">Name on Card</label>
                            <input type="text" id="card-name" placeholder="John Doe">
                        </div>
                    </div>
                </div>
                
                <div class="payment-method">
                    <input type="radio" id="paypal" name="payment-method" value="paypal">
                    <label for="paypal">
                        <i class="fab fa-paypal"></i>
                        PayPal
                    </label>
                    <div class="payment-details" id="paypal-details">
                        <p>You will be redirected to PayPal to complete your payment securely.</p>
                    </div>
                </div>
            </div>
            
            <div class="step-actions">
                <button type="button" class="step-btn prev-step" id="back-to-shipping">Back</button>
                <button type="button" class="step-btn place-order" id="place-order">Place Order</button>
            </div>
        </div>
        
        <!-- Step 3: Order Confirmation -->
        <div class="checkout-content" id="step-3">
            <div class="order-complete">
                <i class="fas fa-check-circle"></i>
                <h3>Order Placed Successfully!</h3>
                <p>Thank you for shopping with E$M Shopping Bay.</p>
                <p>Your order #<span id="order-number">123456</span> has been received.</p>
                <p>You will receive a confirmation email shortly.</p>
                <a href="#" class="btn" id="continue-shopping">Continue Shopping</a>
            </div>
        </div>
    </div>

    <!-- Auth Modal -->
    <div class="auth-modal" id="auth-modal">
        <div class="auth-header">
            <h2 id="auth-modal-title">Login</h2>
            <button class="close-checkout" id="close-auth"><i class="fas fa-times"></i></button>
        </div>
        
        <div class="auth-tabs">
            <div class="auth-tab active" data-tab="login">Login</div>
            <div class="auth-tab" data-tab="register">Register</div>
        </div>
        
        <!-- Login Form -->
        <div class="auth-form active" id="login-form">
            <form id="login">
                <div class="form-group">
                    <label for="login-email">Email Address</label>
                    <input type="email" id="login-email" required>
                </div>
                
                <div class="form-group">
                    <label for="login-password">Password</label>
                    <div class="password-wrapper">
                        <input type="password" id="login-password" required>
                        <span class="toggle-password"><i class="fas fa-eye"></i></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn" style="width: 100%;">Login</button>
                </div>
                
                <div class="auth-footer">
                    <p>Don't have an account? <a href="#" id="switch-to-register">Register here</a></p>
                    <p><a href="#">Forgot password?</a></p>
                </div>
            </form>
        </div>
        
        <!-- Register Form -->
        <div class="auth-form" id="register-form">
            <form id="register">
                <div class="form-row">
                    <div class="form-group">
                        <label for="register-first-name">First Name</label>
                        <input type="text" id="register-first-name" required>
                    </div>
                    <div class="form-group">
                        <label for="register-last-name">Last Name</label>
                        <input type="text" id="register-last-name" required>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="register-email">Email Address</label>
                    <input type="email" id="register-email" required>
                </div>
                
                <div class="form-group">
                    <label for="register-phone">Phone Number</label>
                    <input type="tel" id="register-phone" required>
                </div>
                
                <div class="form-group">
                    <label for="register-password">Password</label>
                    <div class="password-wrapper">
                        <input type="password" id="register-password" required>
                        <span class="toggle-password"><i class="fas fa-eye"></i></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="register-confirm-password">Confirm Password</label>
                    <div class="password-wrapper">
                        <input type="password" id="register-confirm-password" required>
                        <span class="toggle-password"><i class="fas fa-eye"></i></span>
                    </div>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn" style="width: 100%;">Register</button>
                </div>
                
                <div class="auth-footer">
                    <p>Already have an account? <a href="#" id="switch-to-login">Login here</a></p>
                    <p>By registering, you agree to our <a href="#">Terms & Conditions</a></p>
                </div>
            </form>
        </div>
    </div>
    
    <div class="auth-overlay" id="auth-overlay"></div>

    <!-- Admin Dashboard -->
    <div class="admin-dashboard" id="admin-dashboard">
        <div class="container">
            <div class="admin-header">
                <h1>E$M <span>Admin</span> Dashboard</h1>
                <button class="logout-btn" id="admin-logout"><i class="fas fa-sign-out-alt"></i> Logout</button>
            </div>
            
            <div class="admin-sections">
                <div class="admin-tab active" data-tab="products">Products</div>
                <div class="admin-tab" data-tab="orders">Orders</div>
                <div class="admin-tab" data-tab="users">Users</div>
                <div class="admin-tab" data-tab="analytics">Analytics</div>
            </div>
            
            <!-- Products Tab -->
            <div class="admin-content active" id="products-tab">
                <button class="btn" id="add-product-btn"><i class="fas fa-plus"></i> Add Product</button>
                
                <div class="add-product-form" id="add-product-form" style="display: none;">
                    <h3>Add New Product</h3>
                    <form id="new-product-form">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="product-name">Product Name</label>
                                <input type="text" id="product-name" required>
                            </div>
                            <div class="form-group">
                                <label for="product-category">Category</label>
                                <select id="product-category" required>
                                    <option value="electronics">Electronics</option>
                                    <option value="fashion">Fashion</option>
                                    <option value="home">Home & Kitchen</option>
                                    <option value="beauty">Beauty</option>
                                    <option value="groceries">Groceries</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="product-price">Price (KSh)</label>
                                <input type="number" id="product-price" required>
                            </div>
                            <div class="form-group">
                                <label for="product-old-price">Old Price (KSh)</label>
                                <input type="number" id="product-old-price">
                            </div>
                            <div class="form-group">
                                <label for="product-stock">Stock Quantity</label>
                                <input type="number" id="product-stock" required>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="product-description">Description</label>
                            <textarea id="product-description" required></textarea>
                        </div>
                        
                        <div class="form-group">
                            <label for="product-image">Image URL</label>
                            <input type="text" id="product-image" required>
                        </div>
                        
                        <div class="form-group">
                            <button type="submit" class="btn">Save Product</button>
                            <button type="button" class="btn btn-outline" id="cancel-add-product">Cancel</button>
                        </div>
                    </form>
                </div>
                
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="products-table">
                        <!-- Products will be loaded here dynamically -->
                    </tbody>
                </table>
            </div>
            
            <!-- Orders Tab -->
            <div class="admin-content" id="orders-tab">
                <table>
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Date</th>
                            <th>Amount</th>
                            <th>Status</th>
                            <th>Pickup Location</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="orders-table">
                        <!-- Orders will be loaded here dynamically -->
                    </tbody>
                </table>
            </div>
            
            <!-- Users Tab -->
            <div class="admin-content" id="users-tab">
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="users-table">
                        <!-- Users will be loaded here dynamically -->
                    </tbody>
                </table>
            </div>
            
            <!-- Analytics Tab -->
            <div class="admin-content" id="analytics-tab">
                <div class="analytics-grid">
                    <div class="analytics-card">
                        <h3>Total Sales</h3>
                        <p>KSh <span id="total-sales">0</span></p>
                    </div>
                    <div class="analytics-card">
                        <h3>Total Orders</h3>
                        <p><span id="total-orders">0</span></p>
                    </div>
                    <div class="analytics-card">
                        <h3>Total Products</h3>
                        <p><span id="total-products">0</span></p>
                    </div>
                    <div class="analytics-card">
                        <h3>Total Users</h3>
                        <p><span id="total-users">0</span></p>
                    </div>
                </div>
                
                <div class="chart-container">
                    <canvas id="sales-chart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Sample product data
        const products = [
            {
                id: 1,
                name: "Samsung Galaxy S21",
                category: "electronics",
                price: 89999,
                oldPrice: 99999,
                stock: 15,
                image: "https://images.unsplash.com/photo-1610792516307-ea5acd9c3b00?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Latest Samsung smartphone with 6.2-inch display, 128GB storage, and triple camera system."
            },
            {
                id: 2,
                name: "Men's Casual Shirt",
                category: "fashion",
                price: 2499,
                oldPrice: 2999,
                stock: 30,
                image: "https://images.unsplash.com/photo-1598033129183-c4f50c736f10?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Comfortable cotton shirt for men, available in multiple colors and sizes."
            },
            {
                id: 3,
                name: "Kitchen Blender",
                category: "home",
                price: 5999,
                oldPrice: 6999,
                stock: 12,
                image: "https://images.unsplash.com/photo-1585238342024-78d387f4a707?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Powerful 1000W blender with 5-speed settings and stainless steel blades."
            },
            {
                id: 4,
                name: "Wireless Headphones",
                category: "electronics",
                price: 12999,
                oldPrice: 14999,
                stock: 8,
                image: "https://images.unsplash.com/photo-1505740420928-5e560c06d30e?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Noise-cancelling Bluetooth headphones with 30-hour battery life."
            },
            {
                id: 5,
                name: "Women's Handbag",
                category: "fashion",
                price: 3999,
                oldPrice: 4999,
                stock: 20,
                image: "https://images.unsplash.com/photo-1590874103328-eac38a683ce7?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Stylish leather handbag with multiple compartments and adjustable strap."
            },
            {
                id: 6,
                name: "Coffee Maker",
                category: "home",
                price: 8999,
                oldPrice: 9999,
                stock: 10,
                image: "https://images.unsplash.com/photo-1556911220-bff31c812dba?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "12-cup programmable coffee maker with auto shut-off and reusable filter."
            },
            {
                id: 7,
                name: "Skincare Set",
                category: "beauty",
                price: 5999,
                oldPrice: 6999,
                stock: 18,
                image: "https://images.unsplash.com/photo-1571781926291-c477ebfd024b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Complete skincare set including cleanser, toner, moisturizer and serum."
            },
            {
                id: 8,
                name: "Organic Coffee Beans",
                category: "groceries",
                price: 1499,
                oldPrice: 1799,
                stock: 25,
                image: "https://images.unsplash.com/photo-1515442261605-65987783cb6a?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80",
                description: "Premium organic coffee beans from Kenya, 500g pack."
            }
        ];

        // Sample user data
        const users = [
            {
                id: 1,
                firstName: "John",
                lastName: "Doe",
                email: "john@example.com",
                phone: "254712345678",
                role: "admin"
            },
            {
                id: 2,
                firstName: "Jane",
                lastName: "Smith",
                email: "jane@example.com",
                phone: "254723456789",
                role: "customer"
            },
            {
                id: 3,
                firstName: "Mike",
                lastName: "Johnson",
                email: "mike@example.com",
                phone: "254734567890",
                role: "customer"
            }
        ];

        // Sample order data
        const orders = [
            {
                id: 1001,
                customer: "John Doe",
                date: "2023-05-15",
                amount: 89999,
                status: "completed",
                pickupLocation: "Nairobi CBD",
                items: [
                    { productId: 1, quantity: 1, price: 89999 }
                ]
            },
            {
                id: 1002,
                customer: "Jane Smith",
                date: "2023-05-18",
                amount: 8498,
                status: "shipped",
                pickupLocation: "Westgate Mall",
                items: [
                    { productId: 2, quantity: 2, price: 2499 },
                    { productId: 5, quantity: 1, price: 3999 }
                ]
            },
            {
                id: 1003,
                customer: "Mike Johnson",
                date: "2023-05-20",
                amount: 5999,
                status: "processing",
                pickupLocation: "Garden City",
                items: [
                    { productId: 7, quantity: 1, price: 5999 }
                ]
            }
        ];

        // Pickup locations
        const pickupLocations = ['Nairobi CBD', 'Westgate Mall', 'Garden City', 'Two Rivers', 'Thika Road Mall'];

        // Current user state
        let currentUser = null;
        let cart = [];
        let currentProductId = products.length;
        let editingProductId = null;

        // DOM elements
        const productGrid = document.getElementById('product-grid');
        const cartItems = document.getElementById('cart-items');
        const cartSubtotal = document.getElementById('cart-subtotal');
        const cartDelivery = document.getElementById('cart-delivery');
        const cartTotal = document.getElementById('cart-total');
        const cartCount = document.querySelector('.cart-count');
        const cartSidebar = document.getElementById('cart-sidebar');
        const cartOverlay = document.getElementById('cart-overlay');
        const cartIcon = document.getElementById('cart-icon');
        const closeCart = document.getElementById('close-cart');
        const checkoutBtn = document.getElementById('checkout-btn');
        const checkoutModal = document.getElementById('checkout-modal');
        const closeCheckout = document.getElementById('close-checkout');
        const checkoutOverlay = document.querySelector('.cart-overlay');
        const checkoutItems = document.getElementById('checkout-items');
        const checkoutSubtotal = document.getElementById('checkout-subtotal');
        const checkoutDelivery = document.getElementById('checkout-delivery');
        const checkoutTotal = document.getElementById('checkout-total');
        const nextToPayment = document.getElementById('next-to-payment');
        const backToShipping = document.getElementById('back-to-shipping');
        const placeOrderBtn = document.getElementById('place-order');
        const continueShopping = document.getElementById('continue-shopping');
        const orderNumber = document.getElementById('order-number');
        const authModal = document.getElementById('auth-modal');
        const authOverlay = document.getElementById('auth-overlay');
        const closeAuth = document.getElementById('close-auth');
        const loginLink = document.getElementById('login-link');
        const registerLink = document.getElementById('register-link');
        const switchToRegister = document.getElementById('switch-to-register');
        const switchToLogin = document.getElementById('switch-to-login');
        const loginForm = document.getElementById('login');
        const registerForm = document.getElementById('register');
        const adminLink = document.getElementById('admin-link');
        const adminDashboard = document.getElementById('admin-dashboard');
        const adminLogout = document.getElementById('admin-logout');
        const productsTable = document.getElementById('products-table');
        const ordersTable = document.getElementById('orders-table');
        const usersTable = document.getElementById('users-table');
        const addProductBtn = document.getElementById('add-product-btn');
        const addProductForm = document.getElementById('add-product-form');
        const cancelAddProduct = document.getElementById('cancel-add-product');
        const newProductForm = document.getElementById('new-product-form');
        const filterBtns = document.querySelectorAll('.filter-btn');
        const paymentMethods = document.querySelectorAll('input[name="payment-method"]');
        const totalSales = document.getElementById('total-sales');
        const totalOrders = document.getElementById('total-orders');
        const totalProducts = document.getElementById('total-products');
        const totalUsers = document.getElementById('total-users');

        // Initialize the app
        function init() {
            renderProducts();
            setupEventListeners();
            updateCartCount();
            
            // Check if admin is logged in
            if (localStorage.getItem('adminLoggedIn')) {
                showAdminDashboard();
            }
        }

        // Render products to the page
        function renderProducts(filter = 'all') {
            productGrid.innerHTML = '';
            
            const filteredProducts = filter === 'all' 
                ? products.filter(product => product.stock > 0) // Only show in-stock products to customers
                : products.filter(product => product.category === filter && product.stock > 0);
            
            if (filteredProducts.length === 0) {
                productGrid.innerHTML = '<p class="empty-message">No products found in this category.</p>';
                return;
            }
            
            filteredProducts.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    ${product.oldPrice ? `<div class="product-badge">Sale</div>` : ''}
                    <div class="product-image">
                        <img src="${product.image}" alt="${product.name}">
                        <div class="product-actions">
                            <button class="action-btn" data-id="${product.id}"><i class="far fa-heart"></i></button>
                            <button class="action-btn" data-id="${product.id}"><i class="far fa-eye"></i></button>
                        </div>
                    </div>
                    <div class="product-info">
                        <p class="product-category">${product.category.charAt(0).toUpperCase() + product.category.slice(1)}</p>
                        <h3 class="product-title">${product.name}</h3>
                        <div class="product-price">
                            <span class="current-price">KSh ${product.price.toLocaleString()}</span>
                            ${product.oldPrice ? `<span class="old-price">KSh ${product.oldPrice.toLocaleString()}</span>` : ''}
                        </div>
                        <button class="add-to-cart" data-id="${product.id}">
                            <i class="fas fa-shopping-cart"></i> Add to Cart
                        </button>
                    </div>
                `;
                productGrid.appendChild(productCard);
            });
            
            // Add event listeners to add to cart buttons
            document.querySelectorAll('.add-to-cart').forEach(button => {
                button.addEventListener('click', (e) => {
                    const productId = parseInt(e.target.getAttribute('data-id'));
                    addToCart(productId);
                });
            });
        }

        // Add product to cart
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            
            if (!product) return;
            
            if (product.stock <= 0) {
                alert('This product is currently out of stock');
                return;
            }
            
            // Check if product already in cart
            const existingItem = cart.find(item => item.id === productId);
            
            if (existingItem) {
                if (existingItem.quantity >= product.stock) {
                    alert(`Only ${product.stock} items available in stock`);
                    return;
                }
                existingItem.quantity += 1;
            } else {
                cart.push({
                    id: product.id,
                    name: product.name,
                    price: product.price,
                    image: product.image,
                    quantity: 1
                });
            }
            
            updateCart();
            showCart();
        }

        // Update cart UI
        function updateCart() {
            // Update cart items
            if (cart.length === 0) {
                cartItems.innerHTML = '<p class="empty-cart-message">Your cart is empty</p>';
            } else {
                cartItems.innerHTML = '';
                cart.forEach(item => {
                    const cartItem = document.createElement('div');
                    cartItem.className = 'cart-item';
                    cartItem.innerHTML = `
                        <img src="${item.image}" alt="${item.name}" class="cart-item-img">
                        <div class="cart-item-info">
                            <h4 class="cart-item-title">${item.name}</h4>
                            <p class="cart-item-price">KSh ${item.price.toLocaleString()}</p>
                            <div class="cart-item-quantity">
                                <button class="quantity-btn minus" data-id="${item.id}">-</button>
                                <input type="number" class="quantity-input" value="${item.quantity}" min="1" data-id="${item.id}">
                                <button class="quantity-btn plus" data-id="${item.id}">+</button>
                            </div>
                        </div>
                        <button class="remove-item" data-id="${item.id}"><i class="fas fa-trash"></i></button>
                    `;
                    cartItems.appendChild(cartItem);
                });
            }
            
            // Update cart totals
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            const deliveryFee = subtotal > 5000 ? 0 : 300; // Free delivery for orders over KSh 5000
            const total = subtotal + deliveryFee;
            
            cartSubtotal.textContent = `KSh ${subtotal.toLocaleString()}`;
            cartDelivery.textContent = `KSh ${deliveryFee.toLocaleString()}`;
            cartTotal.textContent = `KSh ${total.toLocaleString()}`;
            
            // Update checkout summary
            if (checkoutItems) {
                checkoutItems.innerHTML = '';
                cart.forEach(item => {
                    const orderItem = document.createElement('div');
                    orderItem.className = 'order-item';
                    orderItem.innerHTML = `
                        <div class="order-item-info">
                            <img src="${item.image}" alt="${item.name}" class="order-item-img">
                            <span class="order-item-title">${item.name} × ${item.quantity}</span>
                        </div>
                        <span class="order-item-price">KSh ${(item.price * item.quantity).toLocaleString()}</span>
                    `;
                    checkoutItems.appendChild(orderItem);
                });
                
                checkoutSubtotal.textContent = `KSh ${subtotal.toLocaleString()}`;
                checkoutDelivery.textContent = `KSh ${deliveryFee.toLocaleString()}`;
                checkoutTotal.textContent = `KSh ${total.toLocaleString()}`;
            }
            
            updateCartCount();
        }

        // Update cart count in header
        function updateCartCount() {
            const count = cart.reduce((sum, item) => sum + item.quantity, 0);
            cartCount.textContent = count;
            cartCount.style.display = count > 0 ? 'flex' : 'none';
        }

        // Show/hide cart sidebar
        function showCart() {
            cartSidebar.classList.add('active');
            cartOverlay.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function hideCart() {
            cartSidebar.classList.remove('active');
            cartOverlay.classList.remove('active');
            document.body.style.overflow = '';
        }

        // Show/hide checkout modal
        function showCheckout() {
            checkoutModal.classList.add('active');
            checkoutOverlay.classList.add('active');
            document.body.style.overflow = 'hidden';
            hideCart();
        }

        function hideCheckout() {
            checkoutModal.classList.remove('active');
            checkoutOverlay.classList.remove('active');
            document.body.style.overflow = '';
        }

        // Show/hide auth modal
        function showAuthModal(tab = 'login') {
            authModal.classList.add('active');
            authOverlay.classList.add('active');
            document.body.style.overflow = 'hidden';
            
            // Switch to specified tab
            if (tab === 'login') {
                switchAuthTab('login');
            } else {
                switchAuthTab('register');
            }
        }

        function hideAuthModal() {
            authModal.classList.remove('active');
            authOverlay.classList.remove('active');
            document.body.style.overflow = '';
        }

        // Switch between login/register tabs
        function switchAuthTab(tab) {
            const loginTab = document.querySelector('.auth-tab[data-tab="login"]');
            const registerTab = document.querySelector('.auth-tab[data-tab="register"]');
            const loginForm = document.getElementById('login-form');
            const registerForm = document.getElementById('register-form');
            
            if (tab === 'login') {
                loginTab.classList.add('active');
                registerTab.classList.remove('active');
                loginForm.classList.add('active');
                registerForm.classList.remove('active');
                document.getElementById('auth-modal-title').textContent = 'Login';
            } else {
                registerTab.classList.add('active');
                loginTab.classList.remove('active');
                registerForm.classList.add('active');
                loginForm.classList.remove('active');
                document.getElementById('auth-modal-title').textContent = 'Register';
            }
        }

        // Show admin dashboard
        function showAdminDashboard() {
            adminLink.style.display = 'block';
            adminDashboard.style.display = 'block';
            renderAdminProducts();
            renderAdminOrders();
            renderAdminUsers();
            updateAdminAnalytics();
        }

        function hideAdminDashboard() {
            adminDashboard.style.display = 'none';
            localStorage.removeItem('adminLoggedIn');
        }

        // Render products in admin dashboard
        function renderAdminProducts() {
            productsTable.innerHTML = '';
            
            products.forEach(product => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${product.id}</td>
                    <td><img src="${product.image}" alt="${product.name}" style="width: 50px; height: 50px; object-fit: cover;"></td>
                    <td>${product.name}</td>
                    <td>${product.category.charAt(0).toUpperCase() + product.category.slice(1)}</td>
                    <td><input type="number" class="admin-price-input" value="${product.price}" data-id="${product.id}"></td>
                    <td>
                        <select class="admin-stock-select" data-id="${product.id}">
                            <option value="in-stock" ${product.stock > 0 ? 'selected' : ''}>In Stock (${product.stock})</option>
                            <option value="out-of-stock" ${product.stock <= 0 ? 'selected' : ''}>Out of Stock</option>
                        </select>
                    </td>
                    <td>
                        <button class="action-btn edit-btn" data-id="${product.id}"><i class="fas fa-edit"></i></button>
                        <button class="action-btn delete-btn" data-id="${product.id}"><i class="fas fa-trash"></i></button>
                    </td>
                `;
                productsTable.appendChild(row);
            });

            // Add event listeners for inline editing
            document.querySelectorAll('.admin-price-input').forEach(input => {
                input.addEventListener('change', (e) => {
                    const productId = parseInt(e.target.getAttribute('data-id'));
                    const newPrice = parseInt(e.target.value);
                    const product = products.find(p => p.id === productId);
                    if (product) {
                        product.price = newPrice;
                        renderProducts(); // Update frontend display
                    }
                });
            });

            document.querySelectorAll('.admin-stock-select').forEach(select => {
                select.addEventListener('change', (e) => {
                    const productId = parseInt(e.target.getAttribute('data-id'));
                    const product = products.find(p => p.id === productId);
                    if (product) {
                        if (e.target.value === 'out-of-stock') {
                            product.stock = 0;
                        } else {
                            // Prompt for stock quantity if changing back to in stock
                            const newStock = prompt('Enter stock quantity:', product.stock || 10);
                            if (newStock !== null) {
                                product.stock = parseInt(newStock) || 0;
                            } else {
                                e.target.value = product.stock > 0 ? 'in-stock' : 'out-of-stock';
                            }
                        }
                        renderProducts(); // Update frontend display
                    }
                });
            });
        }

        // Render orders in admin dashboard
        function renderAdminOrders() {
            ordersTable.innerHTML = '';
            
            orders.forEach(order => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>#${order.id}</td>
                    <td>${order.customer}</td>
                    <td>${order.date}</td>
                    <td>KSh ${order.amount.toLocaleString()}</td>
                    <td>
                        <select class="order-status-select" data-id="${order.id}">
                            <option value="processing" ${order.status === 'processing' ? 'selected' : ''}>Processing</option>
                            <option value="shipped" ${order.status === 'shipped' ? 'selected' : ''}>Shipped</option>
                            <option value="delivered" ${order.status === 'delivered' ? 'selected' : ''}>Delivered</option>
                            <option value="cancelled" ${order.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                        </select>
                    </td>
                    <td>
                        <select class="pickup-location-select" data-id="${order.id}" ${order.status === 'processing' ? '' : 'disabled'}>
                            ${pickupLocations.map(loc => 
                                `<option value="${loc}" ${order.pickupLocation === loc ? 'selected' : ''}>${loc}</option>`
                            ).join('')}
                        </select>
                    </td>
                    <td>
                        <button class="action-btn view-order-btn" data-id="${order.id}"><i class="fas fa-eye"></i></button>
                        <button class="action-btn notify-btn" data-id="${order.id}"><i class="fas fa-bell"></i></button>
                    </td>
                `;
                ordersTable.appendChild(row);
            });

            // Add event listeners for order status changes
            document.querySelectorAll('.order-status-select').forEach(select => {
                select.addEventListener('change', (e) => {
                    const orderId = parseInt(e.target.getAttribute('data-id'));
                    const newStatus = e.target.value;
                    const order = orders.find(o => o.id === orderId);
                    if (order) {
                        order.status = newStatus;
                        // Enable/disable pickup location based on status
                        const pickupSelect = document.querySelector(`.pickup-location-select[data-id="${orderId}"]`);
                        if (pickupSelect) {
                            pickupSelect.disabled = newStatus !== 'processing';
                        }
                    }
                });
            });

            // Add event listeners for pickup location changes
            document.querySelectorAll('.pickup-location-select').forEach(select => {
                select.addEventListener('change', (e) => {
                    const orderId = parseInt(e.target.getAttribute('data-id'));
                    const newLocation = e.target.value;
                    const order = orders.find(o => o.id === orderId);
                    if (order) {
                        order.pickupLocation = newLocation;
                    }
                });
            });

            // View order details
            document.querySelectorAll('.view-order-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const orderId = parseInt(e.target.getAttribute('data-id') || 
                                   e.target.parentElement.getAttribute('data-id'));
                    const order = orders.find(o => o.id === orderId);
                    if (order) {
                        let itemsHtml = '';
                        order.items.forEach(item => {
                            const product = products.find(p => p.id === item.productId);
                            itemsHtml += `
                                <tr>
                                    <td>${product ? product.name : 'Unknown Product'}</td>
                                    <td>${item.quantity}</td>
                                    <td>KSh ${item.price.toLocaleString()}</td>
                                    <td>KSh ${(item.price * item.quantity).toLocaleString()}</td>
                                </tr>
                            `;
                        });

                        alert(`
                            Order #${order.id} Details:
                            Customer: ${order.customer}
                            Date: ${order.date}
                            Status: ${order.status}
                            ${order.pickupLocation ? `Pickup Location: ${order.pickupLocation}` : ''}
                            
                            Items:
                            ${itemsHtml}
                            
                            Total: KSh ${order.amount.toLocaleString()}
                        `);
                    }
                });
            });

            // Notify customer
            document.querySelectorAll('.notify-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const orderId = parseInt(e.target.getAttribute('data-id') || 
                                   e.target.parentElement.getAttribute('data-id'));
                    const order = orders.find(o => o.id === orderId);
                    if (order) {
                        const message = prompt('Enter notification message:', 
                            `Your order #${order.id} status has been updated to ${order.status}.`);
                        if (message) {
                            alert(`Notification sent to customer: "${message}"`);
                        }
                    }
                });
            });
        }

        // Render users in admin dashboard
        function renderAdminUsers() {
            usersTable.innerHTML = '';
            
            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.id}</td>
                    <td>${user.firstName} ${user.lastName}</td>
                    <td>${user.email}</td>
                    <td>${user.phone}</td>
                    <td>
                        <select class="user-role-select" data-id="${user.id}">
                            <option value="admin" ${user.role === 'admin' ? 'selected' : ''}>Admin</option>
                            <option value="customer" ${user.role === 'customer' ? 'selected' : ''}>Customer</option>
                        </select>
                    </td>
                    <td>
                        <button class="action-btn reset-password-btn" data-id="${user.id}"><i class="fas fa-key"></i></button>
                        ${user.role === 'customer' ? `<button class="action-btn delete-btn" data-id="${user.id}"><i class="fas fa-trash"></i></button>` : ''}
                    </td>
                `;
                usersTable.appendChild(row);
            });

            // Add event listeners for role changes
            document.querySelectorAll('.user-role-select').forEach(select => {
                select.addEventListener('change', (e) => {
                    const userId = parseInt(e.target.getAttribute('data-id'));
                    const newRole = e.target.value;
                    const user = users.find(u => u.id === userId);
                    if (user) {
                        user.role = newRole;
                        // Re-render to update delete button visibility
                        renderAdminUsers();
                    }
                });
            });

            // Add event listener for password reset
            document.querySelectorAll('.reset-password-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const userId = parseInt(e.target.getAttribute('data-id') || 
                                  e.target.parentElement.getAttribute('data-id'));
                    const user = users.find(u => u.id === userId);
                    if (user) {
                        const newPassword = prompt(`Reset password for ${user.firstName} ${user.lastName} (${user.email}):`, 'newpassword123');
                        if (newPassword) {
                            alert(`Password for ${user.email} has been reset. New password: ${newPassword}`);
                        }
                    }
                });
            });
        }

        // Update admin analytics
        function updateAdminAnalytics() {
            const totalSalesAmount = orders.reduce((sum, order) => sum + order.amount, 0);
            totalSales.textContent = totalSalesAmount.toLocaleString();
            totalOrders.textContent = orders.length;
            totalProducts.textContent = products.length;
            totalUsers.textContent = users.length;
        }

        // Setup event listeners
        function setupEventListeners() {
            // Cart interactions
            cartIcon.addEventListener('click', showCart);
            closeCart.addEventListener('click', hideCart);
            cartOverlay.addEventListener('click', hideCart);
            checkoutBtn.addEventListener('click', showCheckout);
            
            // Checkout interactions
            closeCheckout.addEventListener('click', hideCheckout);
            checkoutOverlay.addEventListener('click', hideCheckout);
            nextToPayment.addEventListener('click', () => {
                document.querySelector('.step[data-step="1"]').classList.remove('active');
                document.querySelector('.step[data-step="2"]').classList.add('active');
                document.getElementById('step-1').classList.remove('active');
                document.getElementById('step-2').classList.add('active');
            });
            backToShipping.addEventListener('click', () => {
                document.querySelector('.step[data-step="2"]').classList.remove('active');
                document.querySelector('.step[data-step="1"]').classList.add('active');
                document.getElementById('step-2').classList.remove('active');
                document.getElementById('step-1').classList.add('active');
            });
            placeOrderBtn.addEventListener('click', placeOrder);
            continueShopping.addEventListener('click', () => {
                hideCheckout();
                cart = [];
                updateCart();
            });
            
            // Auth interactions
            loginLink.addEventListener('click', (e) => {
                e.preventDefault();
                showAuthModal('login');
            });
            registerLink.addEventListener('click', (e) => {
                e.preventDefault();
                showAuthModal('register');
            });
            closeAuth.addEventListener('click', hideAuthModal);
            authOverlay.addEventListener('click', hideAuthModal);
            switchToRegister.addEventListener('click', (e) => {
                e.preventDefault();
                switchAuthTab('register');
            });
            switchToLogin.addEventListener('click', (e) => {
                e.preventDefault();
                switchAuthTab('login');
            });
            
            // Login form submission
            loginForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const email = document.getElementById('login-email').value;
                const password = document.getElementById('login-password').value;
                
                // Simple validation
                if (email === 'admin@esm.com' && password === 'admin123') {
                    // Admin login
                    localStorage.setItem('adminLoggedIn', 'true');
                    hideAuthModal();
                    showAdminDashboard();
                    adminLink.style.display = 'block';
                    loginLink.style.display = 'none';
                    registerLink.style.display = 'none';
                    document.querySelector('.user-actions').insertAdjacentHTML('afterbegin', '<a href="#" id="logout-link">Logout</a>');
                    document.getElementById('logout-link').addEventListener('click', logout);
                } else if (email && password) {
                    // Regular user login
                    const user = users.find(u => u.email === email);
                    if (user) {
                        currentUser = user;
                        hideAuthModal();
                        loginLink.style.display = 'none';
                        registerLink.style.display = 'none';
                        document.querySelector('.user-actions').insertAdjacentHTML('afterbegin', '<a href="#" id="logout-link">Logout</a>');
                        document.getElementById('logout-link').addEventListener('click', logout);
                    } else {
                        alert('Invalid email or password');
                    }
                }
            });
            
            // Register form submission
            registerForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const firstName = document.getElementById('register-first-name').value;
                const lastName = document.getElementById('register-last-name').value;
                const email = document.getElementById('register-email').value;
                const phone = document.getElementById('register-phone').value;
                const password = document.getElementById('register-password').value;
                const confirmPassword = document.getElementById('register-confirm-password').value;
                
                if (password !== confirmPassword) {
                    alert('Passwords do not match!');
                    return;
                }
                
                // Check if email already exists
                if (users.some(user => user.email === email)) {
                    alert('Email already registered!');
                    return;
                }
                
                // Add new user
                const newUser = {
                    id: users.length + 1,
                    firstName,
                    lastName,
                    email,
                    phone,
                    role: 'customer'
                };
                
                users.push(newUser);
                currentUser = newUser;
                hideAuthModal();
                loginLink.style.display = 'none';
                registerLink.style.display = 'none';
                document.querySelector('.user-actions').insertAdjacentHTML('afterbegin', '<a href="#" id="logout-link">Logout</a>');
                document.getElementById('logout-link').addEventListener('click', logout);
                
                // Update admin dashboard if visible
                if (adminDashboard.style.display === 'block') {
                    renderAdminUsers();
                    updateAdminAnalytics();
                }
            });
            
            // Admin interactions
            adminLink.addEventListener('click', (e) => {
                e.preventDefault();
                showAdminDashboard();
            });
            adminLogout.addEventListener('click', logout);
            
            // Product filter buttons
            filterBtns.forEach(btn => {
                btn.addEventListener('click', () => {
                    filterBtns.forEach(b => b.classList.remove('active'));
                    btn.classList.add('active');
                    renderProducts(btn.getAttribute('data-filter'));
                });
            });
            
            // Payment method selection
            paymentMethods.forEach(method => {
                method.addEventListener('change', () => {
                    document.querySelectorAll('.payment-details').forEach(detail => {
                        detail.style.display = 'none';
                    });
                    
                    const detailsId = `${method.value}-details`;
                    document.getElementById(detailsId).style.display = 'block';
                });
            });
            
            // Add product form
            addProductBtn.addEventListener('click', () => {
                addProductForm.style.display = 'block';
                addProductBtn.style.display = 'none';
                editingProductId = null;
                newProductForm.reset();
            });
            
            cancelAddProduct.addEventListener('click', () => {
                addProductForm.style.display = 'none';
                addProductBtn.style.display = 'block';
                newProductForm.reset();
                editingProductId = null;
            });
            
            // New product form submission
            newProductForm.addEventListener('submit', (e) => {
                e.preventDefault();
                
                const name = document.getElementById('product-name').value;
                const price = parseInt(document.getElementById('product-price').value);
                const stock = parseInt(document.getElementById('product-stock').value);
                const image = document.getElementById('product-image').value;
                
                if (!name || isNaN(price) || isNaN(stock) || !image) {
                    alert('Please fill all required fields with valid data');
                    return;
                }

                if (editingProductId) {
                    // Update existing product
                    const product = products.find(p => p.id === editingProductId);
                    if (product) {
                        product.name = name;
                        product.category = document.getElementById('product-category').value;
                        product.price = price;
                        product.oldPrice = document.getElementById('product-old-price').value 
                            ? parseInt(document.getElementById('product-old-price').value) 
                            : null;
                        product.stock = stock;
                        product.image = image;
                        product.description = document.getElementById('product-description').value;
                    }
                    editingProductId = null;
                } else {
                    // Add new product
                    const newProduct = {
                        id: ++currentProductId,
                        name,
                        category: document.getElementById('product-category').value,
                        price,
                        oldPrice: document.getElementById('product-old-price').value 
                            ? parseInt(document.getElementById('product-old-price').value) 
                            : null,
                        stock,
                        image,
                        description: document.getElementById('product-description').value
                    };
                    products.push(newProduct);
                }
                
                renderAdminProducts();
                renderProducts();
                updateAdminAnalytics();
                addProductForm.style.display = 'none';
                addProductBtn.style.display = 'block';
                newProductForm.reset();
            });
            
            // Admin tabs
            document.querySelectorAll('.admin-tab').forEach(tab => {
                tab.addEventListener('click', () => {
                    document.querySelectorAll('.admin-tab').forEach(t => t.classList.remove('active'));
                    document.querySelectorAll('.admin-content').forEach(c => c.classList.remove('active'));
                    
                    tab.classList.add('active');
                    const tabId = `${tab.getAttribute('data-tab')}-tab`;
                    document.getElementById(tabId).classList.add('active');
                });
            });
            
            // Toggle password visibility
            document.querySelectorAll('.toggle-password').forEach(toggle => {
                toggle.addEventListener('click', function() {
                    const input = this.previousElementSibling;
                    const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                    input.setAttribute('type', type);
                    this.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
                });
            });
        }

        // Handle cart item quantity changes
        document.addEventListener('click', (e) => {
            // Quantity minus
            if (e.target.classList.contains('minus')) {
                const productId = parseInt(e.target.getAttribute('data-id'));
                const item = cart.find(item => item.id === productId);
                
                if (item.quantity > 1) {
                    item.quantity -= 1;
                    updateCart();
                }
            }
            
            // Quantity plus
            if (e.target.classList.contains('plus')) {
                const productId = parseInt(e.target.getAttribute('data-id'));
                const item = cart.find(item => item.id === productId);
                const product = products.find(p => p.id === productId);
                
                if (product && item.quantity >= product.stock) {
                    alert(`Only ${product.stock} items available in stock`);
                    return;
                }
                
                item.quantity += 1;
                updateCart();
            }
            
            // Remove item
            if (e.target.classList.contains('remove-item') || e.target.parentElement.classList.contains('remove-item')) {
                const productId = parseInt(e.target.getAttribute('data-id') || e.target.parentElement.getAttribute('data-id'));
                cart = cart.filter(item => item.id !== productId);
                updateCart();
            }

            // Edit product button
            if (e.target.classList.contains('edit-btn') || 
                (e.target.parentElement && e.target.parentElement.classList.contains('edit-btn'))) {
                const productId = parseInt(e.target.getAttribute('data-id') || 
                                 e.target.parentElement.getAttribute('data-id'));
                const product = products.find(p => p.id === productId);
                
                if (product) {
                    editingProductId = productId;
                    document.getElementById('product-name').value = product.name;
                    document.getElementById('product-category').value = product.category;
                    document.getElementById('product-price').value = product.price;
                    document.getElementById('product-old-price').value = product.oldPrice || '';
                    document.getElementById('product-stock').value = product.stock;
                    document.getElementById('product-image').value = product.image;
                    document.getElementById('product-description').value = product.description;
                    
                    addProductForm.style.display = 'block';
                    addProductBtn.style.display = 'none';
                    document.getElementById('add-product-form').scrollIntoView();
                }
            }

            // Delete product button
            if (e.target.classList.contains('delete-btn') || 
                (e.target.parentElement && e.target.parentElement.classList.contains('delete-btn'))) {
                const productId = parseInt(e.target.getAttribute('data-id') || 
                                 e.target.parentElement.getAttribute('data-id'));
                
                if (confirm('Are you sure you want to delete this product?')) {
                    const productIndex = products.findIndex(p => p.id === productId);
                    if (productIndex !== -1) {
                        products.splice(productIndex, 1);
                        renderAdminProducts();
                        renderProducts();
                        updateAdminAnalytics();
                    }
                }
            }

            // Delete user button
            if (e.target.classList.contains('delete-btn') || 
                (e.target.parentElement && e.target.parentElement.classList.contains('delete-btn'))) {
                const userId = parseInt(e.target.getAttribute('data-id') || 
                             e.target.parentElement.getAttribute('data-id'));
                
                if (confirm('Are you sure you want to delete this user?')) {
                    const userIndex = users.findIndex(u => u.id === userId);
                    if (userIndex !== -1) {
                        users.splice(userIndex, 1);
                        renderAdminUsers();
                        updateAdminAnalytics();
                    }
                }
            }
        });

        // Handle quantity input changes
        document.addEventListener('change', (e) => {
            if (e.target.classList.contains('quantity-input')) {
                const productId = parseInt(e.target.getAttribute('data-id'));
                const item = cart.find(item => item.id === productId);
                const product = products.find(p => p.id === productId);
                const newQuantity = parseInt(e.target.value);
                
                if (newQuantity > 0) {
                    if (product && newQuantity > product.stock) {
                        alert(`Only ${product.stock} items available in stock`);
                        e.target.value = item.quantity;
                        return;
                    }
                    item.quantity = newQuantity;
                    updateCart();
                } else {
                    e.target.value = item.quantity;
                }
            }
        });

        // Place order
        function placeOrder() {
            const paymentMethod = document.querySelector('input[name="payment-method"]:checked').value;
            
            // Validate payment details based on method
            if (paymentMethod === 'mpesa') {
                const mpesaPhone = document.getElementById('mpesa-phone').value;
                if (!mpesaPhone || !mpesaPhone.startsWith('254') || mpesaPhone.length !== 12) {
                    alert('Please enter a valid M-Pesa phone number (e.g. 254712345678)');
                    return;
                }
                
                // Simulate M-Pesa payment request
                setTimeout(() => {
                    // In a real app, you would verify the payment with your backend
                    completeOrder();
                }, 3000);
                
                alert(`M-Pesa payment request sent to ${mpesaPhone}. Please enter your PIN to complete payment.`);
            } else if (paymentMethod === 'card') {
                const cardNumber = document.getElementById('card-number').value;
                const cardExpiry = document.getElementById('card-expiry').value;
                const cardCvv = document.getElementById('card-cvv').value;
                const cardName = document.getElementById('card-name').value;
                
                if (!cardNumber || !cardExpiry || !cardCvv || !cardName) {
                    alert('Please fill in all card details');
                    return;
                }
                
                // Simulate card payment processing
                setTimeout(() => {
                    completeOrder();
                }, 2000);
                
                alert('Processing card payment...');
            } else if (paymentMethod === 'paypal') {
                // Simulate PayPal redirect
                setTimeout(() => {
                    completeOrder();
                }, 1000);
                
                alert('Redirecting to PayPal...');
            }
        }

        // Complete order
        function completeOrder() {
            // Generate random order number
            const orderNum = Math.floor(100000 + Math.random() * 900000);
            orderNumber.textContent = orderNum;
            
            // Add to orders
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            const deliveryFee = subtotal > 5000 ? 0 : 300;
            const total = subtotal + deliveryFee;
            
            const newOrder = {
                id: orderNum,
                customer: currentUser ? `${currentUser.firstName} ${currentUser.lastName}` : 'Guest',
                date: new Date().toISOString().split('T')[0],
                amount: total,
                status: 'processing',
                pickupLocation: pickupLocations[0], // Default to first location
                items: cart.map(item => ({
                    productId: item.id,
                    quantity: item.quantity,
                    price: item.price
                }))
            };
            
            orders.push(newOrder);
            
            // Update product stock
            cart.forEach(cartItem => {
                const product = products.find(p => p.id === cartItem.id);
                if (product) {
                    product.stock -= cartItem.quantity;
                }
            });
            
            // Move to confirmation step
            document.querySelector('.step[data-step="2"]').classList.remove('active');
            document.querySelector('.step[data-step="3"]').classList.add('active');
            document.getElementById('step-2').classList.remove('active');
            document.getElementById('step-3').classList.add('active');
            
            // Update admin dashboard if visible
            if (adminDashboard.style.display === 'block') {
                renderAdminProducts();
                renderAdminOrders();
                updateAdminAnalytics();
            }
            
            // Clear cart
            cart = [];
            updateCart();
        }

        // User logout
        function logout() {
            currentUser = null;
            const logoutLink = document.getElementById('logout-link');
            if (logoutLink) {
                logoutLink.remove();
            }
            loginLink.style.display = 'block';
            registerLink.style.display = 'block';
            
            if (adminDashboard.style.display === 'block') {
                hideAdminDashboard();
            }
        }

        // Initialize the app
        init();
    </script>
</body>
</html>
